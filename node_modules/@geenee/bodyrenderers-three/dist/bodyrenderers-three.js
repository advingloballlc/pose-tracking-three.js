import{SceneRenderer as W,ScenePlugin as U,VideoPlugin as V}from'@geenee/armature';import*as t from'three';import{meshReference as S,meshTriangles as Z,meshUV as u,meshDesc as H}from'@geenee/bodytracking';class G extends W{constructor(E,R,F){super({'container':E,'mode':R,'layerCount':0x2,'mirror':F}),this['cameraAngle']=0xa/0xb4*Math['PI'];const f=this['canvas']['layers'][0x1];this['renderer']=new t['WebGLRenderer']({'canvas':f,'alpha':!0x0,'preserveDrawingBuffer':!0x0}),this['renderer']['setClearColor'](0x0,0x0),this['renderer']['setPixelRatio'](window['devicePixelRatio']),this['renderer']['setSize'](f['clientWidth'],f['clientHeight']),this['renderer']['physicallyCorrectLights']=!0x0,this['renderer']['outputEncoding']=t['sRGBEncoding'],this['canvas']['on']('resize',()=>{this['renderer']['setSize'](f['clientWidth'],f['clientHeight']);}),this['scene']=new t['Scene'](),this['scene']['background']=null,this['camera']=new t['PerspectiveCamera'](this['cameraAngle'],0x1,0.02,0x14);}['updateScene'](){this['scene']&&this['renderer']['render'](this['scene'],this['camera']);}['setupCamera'](E,R){super['setupCamera'](E,R),this['camera']instanceof t['PerspectiveCamera']&&(this['camera']['aspect']=this['cameraRatio'],this['camera']['fov']=this['cameraAngle']/Math['PI']*0xb4,this['camera']['updateProjectionMatrix']());}['setupVideo'](E,R){super['setupVideo'](E,R),this['camera']instanceof t['OrthographicCamera']&&(this['camera']['right']=this['videoSize']['width'],this['camera']['bottom']=this['videoSize']['height'],this['camera']['updateProjectionMatrix']());}['disposeObject'](E){const R=(F,f)=>Array['isArray'](F)&&F['every'](j=>j instanceof f);E['removeFromParent'](),E['traverse'](F=>{F instanceof t['Mesh']&&(F['geometry']instanceof t['BufferGeometry']&&F['geometry']['dispose'](),F['material']instanceof t['Material']&&F['material']['dispose'](),R(F['material'],t['Material'])&&F['material']['forEach'](f=>{f['dispose']();for(const j in f){const a=f[j];a instanceof t['Texture']&&a['dispose']();}}));});}}class O extends U{}class r extends G{}class C extends O{}class I extends G{}class B extends O{}class s extends O{constructor(E,R=!0x1){super(),this['node']=E,this['shapeScale']=R;}async['update'](E,R){if(!this['loaded'])return;const F=E['faces']&&E['faces']['length']>0x0?E['faces'][0x0]['transform']:void 0x0;if(!F)return this['node']['visible']=!0x1,super['update'](E,R);const f=new t['Vector3'](...F['translation']),j=new t['Vector3']()['setScalar'](F['scale']),a=new t['Vector3'](...F['shapeScale'])['multiplyScalar'](F['scale']),m=new t['Quaternion'](...F['rotation']);return this['node']['visible']=!0x0,this['node']['setRotationFromQuaternion'](m),this['node']['position']['copy'](f),this['node']['scale']['copy'](this['shapeScale']?a:j),super['update'](E,R);}}class l extends O{constructor(E,R=0x0,F=!0x1){super(),this['node']=E,this['facePoint']=R,this['shapeScale']=F;}async['update'](E,R){if(!this['loaded'])return;if(!this['node'])return super['update'](E,R);const {transform:F=void 0x0,metric:f=void 0x0}=E['faces']&&E['faces']['length']>0x0?E['faces'][0x0]:{};if(!F||!f)return this['node']['visible']=!0x1,super['update'](E,R);const j=new t['Vector3'](...f[this['facePoint']]),a=new t['Vector3']()['setScalar'](F['scale']),m=new t['Vector3'](...F['shapeScale'])['multiplyScalar'](F['scale']),Q=new t['Quaternion'](...F['rotation']);return this['node']['visible']=!0x0,this['node']['setRotationFromQuaternion'](Q),this['node']['position']['copy'](j),this['node']['scale']['copy'](this['shapeScale']?m:a),super['update'](E,R);}}class N extends O{constructor(E){super(),this['mesh']=E,this['pointCont']=S['length'];}async['load'](E){this['loaded']||(await super['load'](E),await this['setMesh'](this['mesh']));}async['update'](E,R){if(!this['loaded'])return;if(!this['mesh'])return super['update'](E,R);const F=E['faces']&&E['faces']['length']>0x0?E['faces'][0x0]['metric']:void 0x0;if(!F)return this['mesh']['visible']=!0x1,super['update'](E,R);this['mesh']['visible']=!0x0;let f=this['mesh']['geometry']['getAttribute']('position');return F['slice'](0x0,this['pointCont'])['forEach']((j,a)=>f['setXYZ'](a,j[0x0],j[0x1],j[0x2])),this['mesh']['geometry']['computeVertexNormals'](),f['needsUpdate']=!0x0,super['update'](E,R);}async['setMesh'](E){if(delete this['mesh'],this['mesh']=E,!this['loaded']||!E)return;const R=new t['BufferGeometry']();R['setIndex'](Z),R['setAttribute']('position',new t['Float32BufferAttribute'](S['flat'](),0x3)),R['setAttribute']('uv',new t['Float32BufferAttribute'](u['flat'](),0x2)),R['computeVertexNormals'](),E['geometry']=R;}}class z extends V{async['update'](E,R){const F=E['faces']&&E['faces']['length']>0x0?E['faces'][0x0]['mesh']:void 0x0,{videoCtx:j}=this;if(!F||!j)return super['update'](E,R);const {width:m,height:Q}=j['canvas'];F['keypoints']['forEach'](W0=>j['fillRect'](W0[0x0]*m-0x2,W0[0x1]*Q-0x2,0x4,0x4)),j['lineWidth']=0x4,j['strokeStyle']='rgba(93,\x20111,\x20227,\x200.75)';const M=[...H['lipsLowerOuter']]['reverse']();this['drawPath'](j,[...H['lipsUpperOuter'],...M]['map'](W0=>F['keypoints'][W0]),!0x0);const Y=[...H['lipsLowerInner']]['reverse']();this['drawPath'](j,[...H['lipsUpperInner'],...Y]['map'](W0=>F['keypoints'][W0]),!0x0),j['strokeStyle']='rgba(172,\x20110,\x20255,\x200.75)';const q=[...H['rightEyeLower0']]['reverse']();this['drawPath'](j,[...H['rightEyeUpper0'],...q]['map'](W0=>F['keypoints'][W0]),!0x0);const A=[...H['rightEyeLower1']]['reverse']();this['drawPath'](j,[...H['rightEyeUpper1'],...A]['map'](W0=>F['keypoints'][W0]),!0x0);const T=[...H['leftEyeLower0']]['reverse']();this['drawPath'](j,[...H['leftEyeUpper0'],...T]['map'](W0=>F['keypoints'][W0]),!0x0);const X=[...H['leftEyeLower1']]['reverse']();this['drawPath'](j,[...H['leftEyeUpper1'],...X]['map'](W0=>F['keypoints'][W0]),!0x0),j['strokeStyle']='rgba(94,\x20214,\x20202,\x200.75)';const b=[...H['rightEyebrowLower']]['reverse']();this['drawPath'](j,[...H['rightEyebrowUpper'],...b]['map'](W0=>F['keypoints'][W0]),!0x0);const D=[...H['leftEyebrowLower']]['reverse']();if(this['drawPath'](j,[...H['leftEyebrowUpper'],...D]['map'](W0=>F['keypoints'][W0]),!0x0),F['keypoints']['length']>0x1d4){j['strokeStyle']='rgba(218,\x2060,\x20202,\x200.75)',this['drawPath'](j,[...H['rightEyeIris']['slice'](0x1)]['map'](W4=>F['keypoints'][W4]),!0x0),this['drawPath'](j,[...H['leftEyeIris']['slice'](0x1)]['map'](W4=>F['keypoints'][W4]),!0x0);const W0=F['keypoints'][H['rightEyeIris'][0x0]],W1=F['keypoints'][H['leftEyeIris'][0x0]],{width:W2,height:W3}=j['canvas'];j['beginPath'](),j['ellipse'](W0[0x0]*W2,W0[0x1]*W3,0x3,0x3,0x0,0x0,0x2*Math['PI']),j['stroke'](),j['beginPath'](),j['ellipse'](W1[0x0]*W2,W1[0x1]*W3,0x3,0x3,0x0,0x0,0x2*Math['PI']),j['stroke']();}j['lineWidth']=0.5,j['strokeStyle']='rgba(180,\x20180,\x20180,\x200.75)';for(let W4=0x0;W4<Z['length']/0x3;W4++){const W5=[Z[W4*0x3],Z[W4*0x3+0x1],Z[W4*0x3+0x2]]['map'](W6=>F['keypoints'][W6]);this['drawPath'](j,W5,!0x0);}return super['update'](E,R);}['drawPath'](E,R,F){const {width:f,height:j}=E['canvas'],a=new Path2D();a['moveTo'](R[0x0][0x0]*f,R[0x0][0x1]*j);for(let m=0x1;m<R['length'];m++)a['lineTo'](R[m][0x0]*f,R[m][0x1]*j);F&&a['closePath'](),E['stroke'](a);}}class g extends C{constructor(E,R={'spineCurve':0.5,'neckAdjust':0.01,'headRatio':0.32,'shoulderDY':-0.01,'shoulderDZ':0.005}){super(),this['node']=E,this['tune']=R,this['avatarLength']=0x1,this['alignScore']=0.9,this['alignVisibility']=0.9;}async['load'](E){this['loaded']||(await super['load'](E),await this['setNode'](this['node']));}['unload'](){!this['loaded']||(delete this['node'],delete this['skeleton'],delete this['skeletonRef'],delete this['spineRef'],super['unload']());}['setNode'](F){var j;if(delete this['skeleton'],delete this['skeletonRef'],delete this['spineRef'],this['node']=F,!this['loaded']||!F)return;F['traverse'](WW=>{!this['skeletonRef']&&WW instanceof t['SkinnedMesh']&&(this['skeletonRef']=WW['skeleton']);});const m=(j=this['skeletonRef'])==null?void 0x0:j['bones'];if(!m)return;const Q=WW=>m['find'](WU=>WU['name']['toLowerCase']()['endsWith'](WW)),M={'hips':Q('hips'),'spine':Q('spine'),'spine1':Q('spine1'),'spine2':Q('spine2'),'neck':Q('neck'),'head':Q('head'),'headEnd':Q('headtop_end'),'shoulderL':Q('leftshoulder'),'shoulderR':Q('rightshoulder'),'armL':Q('leftarm'),'armR':Q('rightarm'),'foreArmL':Q('leftforearm'),'foreArmR':Q('rightforearm'),'handL':Q('lefthand'),'handR':Q('righthand'),'upLegL':Q('leftupleg'),'upLegR':Q('rightupleg'),'legL':Q('leftleg'),'legR':Q('rightleg'),'footL':Q('leftfoot'),'footR':Q('rightfoot'),'toeL':Q('lefttoebase'),'toeR':Q('righttoebase')};this['skeleton']=M;const Y=M['hips']['getWorldPosition'](new t['Vector3']()),q=M['armL']['getWorldPosition'](new t['Vector3']()),A=M['armR']['getWorldPosition'](new t['Vector3']()),T=q['clone']()['lerp'](A,0.5)['sub'](Y)['length'](),X=q['clone']()['sub'](Y),b=A['clone']()['sub'](Y)['clone']()['cross'](X)['normalize'](),D=M['spine']['getWorldPosition'](new t['Vector3']())['sub'](Y),W0=D['dot'](b),W1=D['clone']()['sub'](b['clone']()['multiplyScalar'](W0))['length'](),W2=M['spine1']['getWorldPosition'](new t['Vector3']())['sub'](Y),W3=W2['dot'](b),W4=W2['clone']()['sub'](b['clone']()['multiplyScalar'](W3))['length'](),W5=M['spine2']['getWorldPosition'](new t['Vector3']())['sub'](Y),W6=W5['dot'](b),W7=W5['clone']()['sub'](b['clone']()['multiplyScalar'](W6))['length'](),W8=M['head']['getWorldPosition'](new t['Vector3']()),W9=M['headEnd']['getWorldPosition'](new t['Vector3']())['clone']()['sub'](W8)['length']();this['avatarLength']=T,this['spineRef']={'spine':[W1/T,W0/T],'spine1':[W4/T,W3/T],'spine2':[W7/T,W6/T],'head':[W9/T,0x0]},F['traverse'](WW=>{WW['frustumCulled']=!0x1;});}async['update'](E,R){var F;const f=E['poses']&&E['poses']['length']>0x0?E['poses'][0x0]['points']:void 0x0,{node:j,skeleton:a,spineRef:m}=this;if(!j)return super['update'](E,R);if(!a||!m||!f)return j['visible']=!0x1,super['update'](E,R);const Q=this['estimateBones'](f,m);return j['visible']=!0x0,(F=this['skeletonRef'])==null||F['pose'](),this['updateSpine'](Q),this['updateHandL'](Q,f),this['updateHandR'](Q,f),this['updateLegL'](Q,f),this['updateLegR'](Q,f),super['update'](E,R);}['updateSpine'](E){var R;const {skeleton:F,spineRef:f}=this;if(!F||!f)return;this['alignBone'](E['hips'],F['hips'],!0x1),this['alignBone'](E['spine'],F['spine']),this['alignBone'](E['spine1'],F['spine1']),this['alignBone'](E['spine2'],F['spine2']),this['alignBone'](E['neck'],F['neck'],!0x1),this['alignBone'](E['head'],F['head'],!0x1);const j=(R=this['skeletonRef'])==null?void 0x0:R['bones']['find'](a=>a['name']['endsWith']('HeadEnd'));if(j){const {head:a,headEnd:m}=E,Q=m['position']['clone']()['sub'](a['position'])['length']();F['head']['scale']['setScalar'](1.05*Q/j['position']['length']());}this['alignBone'](E['shoulderL'],F['shoulderL'],!0x1),this['alignBone'](E['shoulderR'],F['shoulderR'],!0x1);}['updateHandL'](E,R){const {skeleton:F,spineRef:f}=this;if(!F||!f)return;const {alignScore:j,alignVisibility:a}=this;this['alignBone'](E['armL'],F['armL']),!(R['elbowL']['score']<j&&R['elbowL']['visibility']<a)&&(this['alignBone'](E['foreArmL'],F['foreArmL']),this['alignBone'](E['handL'],F['handL']),F['handL']['scale']['setScalar'](0.95));}['updateHandR'](E,R){const {skeleton:F}=this;if(!F)return;const {alignScore:f,alignVisibility:j}=this;this['alignBone'](E['armR'],F['armR']),!(R['elbowR']['score']<f&&R['elbowR']['visibility']<j)&&(this['alignBone'](E['foreArmR'],F['foreArmR']),this['alignBone'](E['handR'],F['handR']),F['handR']['scale']['setScalar'](0.95));}['updateLegL'](E,R){const {skeleton:F}=this;if(!F)return;const {alignScore:f,alignVisibility:j}=this;R['hipL']['score']<f&&R['hipL']['visibility']<j||(this['alignBone'](E['upLegL'],F['upLegL'],!0x1),!(R['kneeL']['score']<f&&R['kneeL']['visibility']<j)&&(this['alignBone'](E['legL'],F['legL']),!(R['ankleL']['score']<f&&R['ankleL']['visibility']<j)&&(this['alignBone'](E['footL'],F['footL']),this['alignBone'](E['toeL'],F['toeL']))));}['updateLegR'](E,R){const {skeleton:F}=this;if(!F)return;const {alignScore:f,alignVisibility:j}=this;R['hipR']['score']<f&&R['hipR']['visibility']<j||(this['alignBone'](E['upLegR'],F['upLegR'],!0x1),!(R['kneeR']['score']<f&&R['kneeR']['visibility']<j)&&(this['alignBone'](E['legR'],F['legR']),!(R['ankleR']['score']<f&&R['ankleR']['visibility']<j)&&(this['alignBone'](E['footR'],F['footR']),this['alignBone'](E['toeR'],F['toeR']))));}['estimateBones'](m,W0){var W1;const W2=new t['Vector3'](...m['hipL']['metric']),W3=new t['Vector3'](...m['hipR']['metric']),W4=W2['clone']()['lerp'](W3,0.5),W5=W2['clone']()['sub'](W3)['normalize'](),W6=W5['clone']()['negate'](),W7=new t['Vector3'](...m['shoulderL']['metric']),W8=new t['Vector3'](...m['shoulderR']['metric']),W9=new t['Vector3'](...m['elbowL']['metric']),WW=new t['Vector3'](...m['elbowR']['metric']),WU=W7['clone']()['lerp'](W8,0.5),WV=W7['clone']()['sub'](W8)['normalize'](),Wt=W7['clone']()['sub'](W4),WS=W8['clone']()['sub'](W4)['clone']()['cross'](Wt)['normalize']();if(this['tune']['shoulderDX']||this['tune']['shoulderDY']||this['tune']['shoulderDZ']){const UN=WV['clone']()['multiplyScalar'](this['tune']['shoulderDX']||0x0),Uz=WU['clone']()['sub'](W4)['normalize']()['multiplyScalar'](this['tune']['shoulderDY']||0x0)['add'](WS['clone']()['multiplyScalar'](((W1=this['tune'])==null?void 0x0:W1['shoulderDZ'])||0x0));W7['add'](Uz)['add'](UN),W8['add'](Uz)['add'](UN['clone']()['negate']());}const WZ=W7['clone']()['lerp'](W8,0.5),Wu=WZ['clone']()['sub'](W4)['normalize'](),WH=W9['clone']()['sub'](W7)['normalize'](),WG=WW['clone']()['sub'](W8)['normalize']();let WO;if(this['tune']['neckAdjust']){const Ug=Math['abs'](WV['x']);WO=Wu['clone']()['multiplyScalar'](Ug*(Wu['dot'](WH)*-this['tune']['neckAdjust']+Wu['dot'](WG)*-this['tune']['neckAdjust'])),WZ['add'](WO);}const Wr=WZ['clone']()['sub'](W4)['length'](),WC=this['tune']['shoulderOffset']||0.2,WI=WZ['clone']()['lerp'](W7,WC),WB=WZ['clone']()['lerp'](W8,WC),Ws=new t['Vector3'](...m['earL']['metric']),WK=new t['Vector3'](...m['earR']['metric']),Wl=Ws['clone']()['lerp'](WK,0.5),WN=new t['Vector3'](...m['nose']['metric']),Wz=Wl['clone']()['sub'](WN)['normalize'](),Wg=Ws['clone']()['sub'](WK)['normalize'](),Wn=Wg['clone']()['cross'](Wz)['add'](Wz['clone']()['multiplyScalar'](0.05))['normalize'](),Wv=this['tune']['headRatio']||0.32,WP=W0['head'][0x0]*Wr,WL=Wl['clone']()['add'](Wn['clone']()['cross'](Wg)['multiplyScalar'](0.025)),WE=WL['clone']()['add'](Wn['clone']()['multiplyScalar'](-Wv*WP)),WR=WL['clone']()['add'](Wn['clone']()['multiplyScalar']((0x1-Wv)*WP)),WF=WE['clone']()['lerp'](WR,0x2),Wf=WV['clone']()['lerp'](Wg,0.5),Wj=WO?W7['clone']()['add'](WO):W7['clone'](),Wa=WO?W8['clone']()['add'](WO):W8['clone'](),Wx=W2['clone']()['lerp'](Wj,W0['spine'][0x0]),Wm=W3['clone']()['lerp'](Wa,W0['spine'][0x0]),Wo=Wx['clone']()['lerp'](Wm,0.5),WQ=Wx['clone']()['sub'](Wm),Ww=W2['clone']()['lerp'](Wj,W0['spine1'][0x0]),WJ=W3['clone']()['lerp'](Wa,W0['spine1'][0x0]),Wy=Ww['clone']()['lerp'](WJ,0.5),Wh=Ww['clone']()['sub'](WJ),WM=W2['clone']()['lerp'](Wj,W0['spine2'][0x0]),WY=W3['clone']()['lerp'](Wa,W0['spine2'][0x0]),Wi=WM['clone']()['lerp'](WY,0.5),Wq=Ww['clone']()['sub'](WY);if(this['tune']['spineCurve']){const Un=W7['clone']()['sub'](W4),Uv=W8['clone']()['sub'](W4)['clone']()['cross'](Un)['normalize'](),UP=this['tune']['spineCurve']*Wr;Wo['add'](Uv['clone']()['multiplyScalar'](W0['spine'][0x1]*UP)),Wy['add'](Uv['clone']()['multiplyScalar'](W0['spine1'][0x1]*UP)),Wi['add'](Uv['clone']()['multiplyScalar'](W0['spine2'][0x1]*UP));}const WA=new t['Vector3'](...m['wristL']['metric']),Wk=WA['clone']()['sub'](W9)['normalize']()['clone']()['sub'](WH)['negate'](),Wd=WS['clone'](),WT=Wk['clone']()['lerp'](Wd,0.5),WX=new t['Vector3'](...m['indexL']['metric']),Wc=new t['Vector3'](...m['pinkyL']['metric']),Wp=WX['clone']()['lerp'](Wc,0.5),Wb=Wc['clone']()['sub'](WX),WD=new t['Vector3'](...m['wristR']['metric']),U0=WD['clone']()['sub'](WW)['normalize']()['clone']()['sub'](WG),U1=WS['clone']()['negate'](),U2=U0['clone']()['lerp'](U1,0.5),U3=new t['Vector3'](...m['indexR']['metric']),U4=new t['Vector3'](...m['pinkyR']['metric']),U5=U3['clone']()['lerp'](U4,0.5),U6=U3['clone']()['sub'](U4),U7=new t['Vector3'](...m['kneeL']['metric']),U8=new t['Vector3'](...m['ankleL']['metric']),U9=new t['Vector3'](...m['footIndexL']['metric']),UW=new t['Vector3'](...m['heelL']['metric']),UU=U8['clone']()['sub'](U7)['normalize'](),UV=U9['clone']()['sub'](UW)['normalize'](),Ut=UU['clone']()['cross'](UV)['normalize'](),US=UW['clone']()['lerp'](U9,0.8),UZ=W6['clone']()['lerp'](Ut,0.2),Uu=W6['clone']()['lerp'](Ut,0.6),UH=new t['Vector3'](...m['kneeR']['metric']),UG=new t['Vector3'](...m['ankleR']['metric']),UO=new t['Vector3'](...m['footIndexR']['metric']),Ur=new t['Vector3'](...m['heelR']['metric']),UC=UG['clone']()['sub'](UH)['normalize'](),UI=UO['clone']()['sub'](Ur)['normalize'](),UB=UC['clone']()['cross'](UI)['normalize'](),Us=Ur['clone']()['lerp'](UO,0.8),UK=W6['clone']()['lerp'](UB,0.2),Ul=W6['clone']()['lerp'](UB,0.6);return{'hips':this['estimateBone'](W4,Wo,W5),'spine':this['estimateBone'](Wo,Wy,WQ),'spine1':this['estimateBone'](Wy,Wi,Wh),'spine2':this['estimateBone'](Wi,WZ,Wq),'neck':this['estimateBone'](WZ,WE,Wf),'head':this['estimateBone'](WE,WR,Wg),'headEnd':this['estimateBone'](WR,WF,Wg),'shoulderL':this['estimateBone'](WI,W7,Wd),'armL':this['estimateBone'](W7,W9,WT),'foreArmL':this['estimateBone'](W9,WA,Wk),'handL':this['estimateBone'](WA,Wp,Wb),'shoulderR':this['estimateBone'](WB,W8,U1),'armR':this['estimateBone'](W8,WW,U2),'foreArmR':this['estimateBone'](WW,WD,U0),'handR':this['estimateBone'](WD,U5,U6),'upLegL':this['estimateBone'](W2,U7,UZ),'legL':this['estimateBone'](U7,U8,Uu),'footL':this['estimateBone'](U8,US,Ut),'toeL':this['estimateBone'](US,U9,Ut),'upLegR':this['estimateBone'](W3,UH,UK),'legR':this['estimateBone'](UH,UG,Ul),'footR':this['estimateBone'](UG,Us,UB),'toeR':this['estimateBone'](Us,UO,UB)};}['estimateBone'](E,R,F){const f=R['clone']()['sub'](E)['normalize'](),j=F['clone']()['normalize']()['cross'](f)['normalize'](),a=f['clone']()['cross'](j);return{'position':E['clone'](),'rotation':new t['Quaternion']()['setFromRotationMatrix'](new t['Matrix4']()['makeBasis'](a,f,j))};}['alignBone'](E,R,F=!0x0){let f=E['rotation']['clone'](),j=E['position']['clone']();R['parent']&&(f=R['parent']['getWorldQuaternion'](new t['Quaternion']())['invert']()['multiply'](f),j['applyMatrix4'](R['parent']['matrixWorld']['clone']()['invert']()),F&&R['parent']instanceof t['Bone']&&(R['parent']['scale']['setScalar'](j['length']()/R['position']['length']()),R['parent']['updateWorldMatrix'](!0x0,!0x0),j=E['position']['clone']()['applyMatrix4'](R['parent']['matrixWorld']['clone']()['invert']()))),R['setRotationFromQuaternion'](f),R['position']['copy'](j),R['updateWorldMatrix'](!0x0,!0x0);}}class n extends g{constructor(E,R,F={'spineCurve':0.5,'neckAdjust':0.01,'headRatio':0.32,'shoulderDY':-0.01,'shoulderDZ':0.005}){super(E,F),this['outfit']=R;}['setNode'](E){super['setNode'](E);const {outfit:R,node:F}=this;!R||!F||F['traverse'](f=>{if(!(f instanceof t['Mesh']))return;const j=a=>a==null?void 0x0:a['some'](m=>typeof m=='string'?f['name']===m:m['test'](f['name']));if(j(R['occluders'])){f['material']['colorWrite']=!0x1,f['renderOrder']=-0x1;return;}if(j(R['hidden'])){f['visible']=!0x1;return;}});}['setOutfit'](E,R){this['outfit']=R,this['setNode'](E);}}class P extends g{constructor(E,R,F,f,j={'spineCurve':0.5,'neckAdjust':0.01,'headRatio':0.32,'shoulderDY':-0.01,'shoulderDZ':0.005}){super(E,j),this['translation']=R,this['rotation']=F,this['scale']=f;}async['update'](E,R){await super['update'](E,R);const F=E['poses']&&E['poses']['length']>0x0?E['poses'][0x0]['points']:void 0x0,{node:f,translation:j,rotation:a,scale:m}=this;if(!f||!F)return;const Q=new t['Vector3'](...F['hipL']['metric']),w=new t['Vector3'](...F['hipR']['metric']),y=Q['clone']()['lerp'](w,0.5);f['position']['copy'](j?y['add'](j):y),a&&f['setRotationFromQuaternion'](a),m&&f['scale']['setScalar'](m);}['updateSpine'](E){const {skeleton:R,spineRef:F}=this;!R||!F||(this['alignBone'](E['hips'],R['hips']),this['alignBone'](E['spine'],R['spine']),this['alignBone'](E['spine1'],R['spine1']),this['alignBone'](E['spine2'],R['spine2']),this['alignBone'](E['neck'],R['neck']),this['alignBone'](E['head'],R['head']),this['alignBone'](E['shoulderL'],R['shoulderL']),this['alignBone'](E['shoulderR'],R['shoulderR']));}['alignBone'](E,R){let F=E['rotation']['clone']();R['parent']&&(F=R['parent']['getWorldQuaternion'](new t['Quaternion']())['invert']()['multiply'](F)),R['setRotationFromQuaternion'](F),R['updateWorldMatrix'](!0x0,!0x0);}}class L extends O{constructor(E,R=-0x1){super(),this['node']=E,this['renderOrder']=R;}async['load'](E){if(!this['loaded'])return this['node']['traverse'](R=>{R instanceof t['Mesh']&&(R['material']['colorWrite']=!0x1),R['renderOrder']=this['renderOrder'];}),super['load'](E);}}export{z as FaceDebugPlugin,N as FaceMaskPlugin,B as FacePlugin,I as FaceRenderer,l as FaceTrackPlugin,s as HeadTrackPlugin,L as OccluderPlugin,g as PoseAlignPlugin,n as PoseOutfitPlugin,C as PosePlugin,r as PoseRenderer,P as PoseTwinPlugin,O as ThreePlugin,G as ThreeRenderer};
